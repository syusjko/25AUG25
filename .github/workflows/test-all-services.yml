# .github/workflows/test-all-services.yml
name: Test All Services

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test-sdk:
    name: Test SDK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/sdk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: packages/sdk/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build SDK
        run: npm run build

      - name: Test SDK
        run: |
          # SDK 테스트 (실제 테스트 코드가 있다면)
          echo "SDK tests would run here"

  test-api-gateway:
    name: Test API Gateway
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install boto3 pytest moto

      - name: Run Python linting
        run: |
          pip install flake8
          flake8 src/

      - name: Test Lambda function
        run: |
          # Lambda 함수 테스트 (실제 테스트 코드가 있다면)
          echo "API Gateway tests would run here"

  test-data-processor:
    name: Test Data Processor
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/data-processor

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install boto3 pytest moto

      - name: Run Python linting
        run: |
          pip install flake8
          flake8 src/

      - name: Test Lambda function
        run: |
          # Lambda 함수 테스트 (실제 테스트 코드가 있다면)
          echo "Data Processor tests would run here"

  test-scouter:
    name: Test Scouter
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/scouter

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install boto3 pytest moto

      - name: Run Python linting
        run: |
          pip install flake8
          flake8 src/

      - name: Test Lambda function
        run: |
          # Lambda 함수 테스트 (실제 테스트 코드가 있다면)
          echo "Scouter tests would run here"

  test-ad-engine:
    name: Test Ad Engine
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/ad-engine

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install boto3 pytest moto psycopg2-binary

      - name: Run Python linting
        run: |
          pip install flake8
          flake8 src/

      - name: Test Lambda function
        run: |
          # Lambda 함수 테스트 (실제 테스트 코드가 있다면)
          echo "Ad Engine tests would run here"

  test-platform:
    name: Test Platform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/platform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/platform/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Build Platform
        run: npm run build

      - name: Test Platform
        run: |
          # 플랫폼 테스트 (실제 테스트 코드가 있다면)
          echo "Platform tests would run here"

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [test-sdk, test-api-gateway, test-data-processor, test-scouter, test-ad-engine, test-platform]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          # 전체 프로젝트 의존성 설치
          npm install
          pip install boto3 pytest moto psycopg2-binary

      - name: Run Integration Tests
        run: |
          # 통합 테스트 실행 (실제 테스트 코드가 있다면)
          echo "Integration tests would run here"

      - name: Test Report
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- SDK: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- API Gateway: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Data Processor: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Scouter: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Ad Engine: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Platform: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Integration: ✅ Passed" >> $GITHUB_STEP_SUMMARY
